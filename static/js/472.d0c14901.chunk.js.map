{"version":3,"file":"static/js/472.d0c14901.chunk.js","mappings":"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","sources":["Components/Contact.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { Container, Row, Col, Form, Button, Alert } from \"react-bootstrap\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nconst ContactForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n  const [message, setMessage] = useState(\"\");\r\n  const [recaptchaToken, setRecaptchaToken] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleRecaptchaChange = (token) => {\r\n    setRecaptchaToken(token);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!recaptchaToken) {\r\n      setMessage(\"Please complete the reCAPTCHA.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await emailjs.send(\r\n        \"service_85to4es\",\r\n        \"template_8nsbhdm\",\r\n        formData,\r\n        \"NZQFyq83U0oJ3qnQR\"\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setMessage(\"Email sent successfully!\");\r\n        setFormData({\r\n          name: \"\",\r\n          email: \"\",\r\n          subject: \"\",\r\n          message: \"\",\r\n        });\r\n      } else {\r\n        setMessage(\"Oops! Something went wrong.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending email: \", error);\r\n      setMessage(\"Oops! Something went wrong.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <h2 className=\"text-center\">Contact Us</h2>\r\n      {message && <Alert variant=\"info\">{message}</Alert>}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email:</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group controlId=\"subject\" className=\"mb-3\">\r\n          <Form.Label>Subject:</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"subject\"\r\n            value={formData.subject}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"message\" className=\"mb-3\">\r\n          <Form.Label>Message:</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={5}\r\n            name=\"message\"\r\n            value={formData.message}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"recaptcha\" className=\"mb-3\">\r\n          <ReCAPTCHA\r\n            sitekey=\"6LeeeKMnAAAAAOy2r-gBpMJNUVdL6Kw5IRL2Iz_W\"\r\n            onChange={handleRecaptchaChange}\r\n          />\r\n          {!recaptchaToken && (\r\n            <div className=\"text-danger\">Please complete the reCAPTCHA.</div>\r\n          )}\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Send Email\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"],"names":["_useState","useState","name","email","subject","message","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","setMessage","_useState5","_useState6","recaptchaToken","setRecaptchaToken","handleChange","e","_e$target","target","value","_objectSpread","_defineProperty","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","abrupt","emailjs","sent","status","t0","console","error","stop","_x","apply","arguments","_jsxs","Container","className","children","_jsx","Alert","variant","Form","onSubmit","Row","Col","Group","controlId","Label","Control","type","onChange","required","as","rows","ReCAPTCHA","sitekey","token","Button"],"sourceRoot":""}