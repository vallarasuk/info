{"version":3,"file":"static/js/719.f575bada.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete &&\n        ((_a = window.MotionHasOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        wantsHandoff.current = false;\n        // This ensures all future calls to animateChanges() will run in useEffect\n        if (!scheduleHandoffComplete) {\n            scheduleHandoffComplete = true;\n            queueMicrotask(completeHandoff);\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.MotionHandoffIsComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.24\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.MotionHandoffAnimation(appearId, key, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedTransformAnimationInTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (window.MotionHasOptimisedTransformAnimation(getOptimisedAppearId(visualElement))) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedTransformAnimationInTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionHandoffCancelAll &&\n                isOptimisedTransformAnimationInTree(this)) {\n                window.MotionHandoffCancelAll();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.24\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.24 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","schedule","queue","arguments","length","undefined","add","cancel","delete","process","frameData","clear","forEach","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","keepAlive","immediate","i","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","_a","visualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","Boolean","animationType","createProjectionNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","updateFeatures","animationState","animateChanges","completeHandoff","options","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","value","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","willChange","applyWillChange","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","acceleratedValues","getWillChangeName","addUniqueItem","arr","item","push","removeItem","index","splice","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","addWillChange","memberName","forEachDefinition","list","resolved","transitionEnd","transition","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","valueTarget","noop","any","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","isNullish","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","prevResolvedValues","createState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedTransformAnimationInTree","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedTransformAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","MotionHandoffCancelAll","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}